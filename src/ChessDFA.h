// ChessDFA.h

#ifndef CHESS_DFA_H
#define CHESS_DFA_H

#include "DFA.h"

enum ChessDFACharacter {DFA_BLANK, DFA_WHITE_KING, DFA_WHITE_QUEEN, DFA_WHITE_BISHOP, DFA_WHITE_KNIGHT, DFA_WHITE_ROOK, DFA_WHITE_PAWN, DFA_BLACK_KING, DFA_BLACK_QUEEN, DFA_BLACK_BISHOP, DFA_BLACK_KNIGHT, DFA_BLACK_ROOK, DFA_BLACK_PAWN, DFA_MAX};

#define CHESS_TEMPLATE_PARAMS 64, DFA_MAX, DFA_MAX, DFA_MAX, DFA_MAX, DFA_MAX, DFA_MAX, DFA_MAX, DFA_MAX, DFA_MAX, DFA_MAX, DFA_MAX, DFA_MAX, DFA_MAX, DFA_MAX, DFA_MAX, DFA_MAX, DFA_MAX, DFA_MAX, DFA_MAX, DFA_MAX, DFA_MAX, DFA_MAX, DFA_MAX, DFA_MAX, DFA_MAX, DFA_MAX, DFA_MAX, DFA_MAX, DFA_MAX, DFA_MAX, DFA_MAX, DFA_MAX, DFA_MAX, DFA_MAX, DFA_MAX, DFA_MAX, DFA_MAX, DFA_MAX, DFA_MAX, DFA_MAX, DFA_MAX, DFA_MAX, DFA_MAX, DFA_MAX, DFA_MAX, DFA_MAX, DFA_MAX, DFA_MAX, DFA_MAX, DFA_MAX, DFA_MAX, DFA_MAX, DFA_MAX, DFA_MAX, DFA_MAX, DFA_MAX, DFA_MAX, DFA_MAX, DFA_MAX, DFA_MAX, DFA_MAX, DFA_MAX, DFA_MAX, DFA_MAX

typedef DFA<CHESS_TEMPLATE_PARAMS> ChessDFA;

// Chess class variants

#include "AcceptDFA.h"
#include "CountCharacterDFA.h"
#include "CountDFA.h"
#include "DifferenceDFA.h"
#include "FixedDFA.h"
#include "IntersectionDFA.h"
#include "InverseDFA.h"
#include "RewriteDFA.h"
#include "UnionDFA.h"

typedef AcceptDFA<CHESS_TEMPLATE_PARAMS> ChessAcceptDFA;
typedef CountCharacterDFA<CHESS_TEMPLATE_PARAMS> ChessCountCharacterDFA;
typedef CountDFA<CHESS_TEMPLATE_PARAMS> ChessCountDFA;
typedef DifferenceDFA<CHESS_TEMPLATE_PARAMS> ChessDifferenceDFA;
typedef FixedDFA<CHESS_TEMPLATE_PARAMS> ChessFixedDFA;
typedef IntersectionDFA<CHESS_TEMPLATE_PARAMS> ChessIntersectionDFA;
typedef InverseDFA<CHESS_TEMPLATE_PARAMS> ChessInverseDFA;
typedef RewriteDFA<CHESS_TEMPLATE_PARAMS> ChessRewriteDFA;
typedef UnionDFA<CHESS_TEMPLATE_PARAMS> ChessUnionDFA;

#endif
